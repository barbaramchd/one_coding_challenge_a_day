# -*- coding: utf-8 -*-
"""Day1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kJjffQ7QZhd2UjNVQix0x60_olqSRIv3

## CodingBat
"""

# First problem
#The parameter weekday is True if it is a weekday, and the parameter vacation is True if we are on vacation. We sleep in if it is not a weekday or we're on vacation. Return True if we sleep in.
#sleep_in(False, False) → True
#sleep_in(True, False) → False
#sleep_in(False, True) → True

def sleep_in(weekday, vacation):
  if weekday == False or vacation == True:
    return True
  else :
    return False

#simplified version

def sleep_in(weekday, vacation):
  if not weekday or vacation:
    return True
  else:
    return False

# Second problem
#Given an int n, return the absolute difference between n and 21, except return double the absolute difference if n is over 21.
#diff21(19) → 2
#diff21(10) → 11
#diff21(21) → 0

def diff21(n):
  if n <=21:
    return abs(n-21)
  else:
    return 2*(abs(n-21))

#Third problem
#Given an int n, return True if it is within 10 of 100 or 200. Note: abs(num) computes the absolute value of a number.
#near_hundred(93) → True
#near_hundred(90) → True
#near_hundred(89) → False

def near_hundred(n):
  if abs(100-n)<=10 or abs(200-n)<=10:
    return True
  else:
    return False

#Fourth question
#We have two monkeys, a and b, and the parameters a_smile and b_smile indicate if each is smiling. We are in trouble if they are both smiling or if neither of them is smiling. Return True if we are in trouble.
#monkey_trouble(True, True) → True
#monkey_trouble(False, False) → True
#monkey_trouble(True, False) → False

def monkey_trouble(a_smile, b_smile):
  if a_smile == True and b_smile == True or a_smile == False and b_smile == False:
    return True
  else:
    return False