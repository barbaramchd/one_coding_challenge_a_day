# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MKLP4Pq45yRn58URfHPv99hpFNVo-efQ
"""

# Given a string and a non-negative int n, return a larger string that is n copies of the original string.

# string_times('Hi', 2) → 'HiHi'
# string_times('Hi', 3) → 'HiHiHi'
# string_times('Hi', 1) → 'Hi'

def string_times(str, n):
  if n>0:
    return (n*str)
  elif n == 0:
    return ""
  else:
    return False

def string_times(str, n):
  result = ""
  for i in range(n):
    result = result + str
  return result

# Given a string and a non-negative int n, we'll say that the front of the string is the first 3 chars, or whatever is there if the string is less than length 3. Return n copies of the front;

# front_times('Chocolate', 2) → 'ChoCho'
# front_times('Chocolate', 3) → 'ChoChoCho'
# front_times('Abc', 3) → 'AbcAbcAbc'

def front_times(str, n):
  front_end = 3
  if len(str)<front_end:
    front_end = len(str)
  front = str[:front_end]
  
  result = ""
  for i in range(n):
    result = result + front
  return result